////////////////////////////////////////////////////////////////////////////
//
//   gro
//
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
//
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
//

include gro

fun statistics L .
  let n := length(L), mu := ( sumlist L ) / n in
    [
      num := n,
      mean := mu,
      std := sqrt ( sumlist ( map ( \ x . (x-mu)^2 ) L ) / n )
    ]
  end;

program p() := {

  gfp := 1000;

};

program main() := {

  t := 0;
  s := 0;
  L := {};
  stats := [ num := 0, mean := 0, std := 0 ];

  s >= 1 : {
    s := 0,
    L := maptocells gfp/volume end,
    stats := statistics L ,
    print ( t, " minutes: N=", stats.num, ", mu=", stats.mean, ", sigma=", stats.std, "\n" )
  }

  true : {
    t := t + dt,
    s := s + dt
  }

};

ecoli ( [], program p() );
