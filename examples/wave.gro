////////////////////////////////////////////////////////////////////////////
// 
//   gro 
// 
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
// 
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// 

include gro

set ( "dt", 0.075 );

ahl := signal ( 1, 1 );

program leader() := {
 
  p := [ t := 2.4 ];
  set ( "ecoli_growth_rate", 0.00 );

  true : { p.t := p.t + dt }

  p.t > 10 : { 
    emit_signal ( ahl, 100 ), 
    p.t := 0 
  }

};

program follower() := { 

  p := [ mode := 0, t := 0 ];

  p.mode = 0 & get_signal ( ahl ) > 0.01 : { 
    emit_signal ( ahl, 100 ),
    p.mode := 1,
    p.t := 0
  }

  p.mode = 1 : { p.t := p.t + dt }

  p.mode = 1 & p.t > 9 : { p.mode := 0 }

};

ecoli ( [ x:= 0, y:= 0 ], program leader() );
ecoli ( [ x:= 0, y:= 10 ], program follower() );



