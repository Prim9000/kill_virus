////////////////////////////////////////////////////////////////////////////
// 
//   gro 
// 
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
// 
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// 

include gro

set ( "dt", 0.1 );

ahl := signal ( 1, 0.01 ); // args = diffusion rate and degradation rate

fun f a . 0.1 < a & a < 0.6;

program sensor() := {

  rfp := 0.0;

  f ( get_signal ( ahl ) ) : { rfp := rfp + 1 };
  rate ( 0.01 * rfp ) : { rfp := rfp - 1 }

};

program report() := {

  needs rfp;

  selected : { message ( 1,
          "cell "     <> tostring(id)
     <> ": ahl="      <> tostring(get_signal(ahl))
     <> ": rfp/vol="  <> tostring(rfp/volume)
    )
  };

};

set ( "rfp_saturation_max", 50 );
set ( "rfp_saturation_min", 0 );

ecoli ( [ x:= 0, y:= 0 ], program sensor() + report() sharing rfp );

program main() := {

  true : { set_signal ( ahl, 0, 0, 10 ) }

};
