////////////////////////////////////////////////////////////////////////////
//
//   gro
//
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
//
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//

include gro // coded by Kevin Oishi!

chemostat(true);
set_theme ( dark_theme );

set ("dt",0.1);

s := signal (1,1.05);

k0 := 2.5;  // base rate of oscillation
kb := 5;    // cell-cell feedback strength
tr := 10;   // refractory period length
se := 650;  // signal emit magnitude

GO := 0;
WAIT := 1;

program oscillator(g0) := {
  gfp := 0.5*volume*g0;

  p := [mode := GO, t := 0, x := g0];

  true : {gfp := 0.5*volume * p.x}

  // advance the oscillation phase
  p.mode = GO & rate (k0) : {p.x := p.x + 0.01*(150-p.x)}
  p.mode = GO & rate(kb*get_signal(s)) : {p.x := p.x + 0.01*(150-p.x)}

  // phase reset
  p.x > 100 : {
    p.x := 0,
    p.mode := WAIT,
    emit_signal(s, se)
  }

  // refractory period timer
  p.mode = WAIT : {p.t := p.t+dt}
  p.mode = WAIT & p.t > tr : {
    p.mode := GO,
    p.t := 0
  }
};

ecoli ( [x:=0, y:=0], program oscillator(0));

program main() := {

  n := 0;

  rate(0.01) : {snapshot("c:\oscillator" <> tostring(n) <> ".tif"), n:=n+1}

  skip();

};
